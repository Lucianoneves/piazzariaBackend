// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
 provider = "mysql"
  url      = env("DATABASE_URL")
}


//Criara a tabela user no banco de dados migrando o schema

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}




model Category {
  id        String    @id @default(uuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[] // Relacionamento com a tabela de produtos

  @@map("categories")
}


model Order {
  id        String @id @default(uuid())
  name      String? // Adicione esta linha
  table     Int      // Adicione esta linha
  draft Boolean @default(true)
  status    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  items     Item[]

 
}

  model Product {
    id          String   @id @default(uuid())
    name        String
    price       Float
    description String
    banner      String  
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    items       Item[]
    category_id String
    

    category    Category @relation(fields: [category_id], references: [id])
  }

model Item {
  id         String   @id @default(uuid())
  amount     Int
  order_id   String
  product_id String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  order   Order   @relation(fields: [order_id], references: [id])
  product Product @relation(fields: [product_id], references: [id])
}